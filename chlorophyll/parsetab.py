
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xce\xba4\n\xc8*E\xa3\x85\xc1\xce`\x90`\xfa\xae'
    
_lr_action_items = {'RPAREN':([3,13,18,21,23,24,26,29,30,31,32,33,34,35,36,37,],[-8,-10,-13,23,-14,-16,29,-15,-17,-21,-22,-24,-18,-20,-19,-23,]),'RVARBOUND':([11,17,18,19,23,29,],[15,20,-13,22,-14,-15,]),'FLOAT':([28,],[33,]),'EQUAL':([4,11,25,],[12,16,28,]),'LVARBOUND':([0,1,2,3,5,7,9,13,15,20,22,],[4,-6,-7,-8,-4,-5,4,-10,-9,-12,-11,]),'LITERAL':([0,1,2,3,5,7,9,13,15,20,22,28,],[3,-6,-7,-8,-4,-5,3,-10,-9,-12,-11,3,]),'COMMA':([3,13,18,23,24,29,31,32,33,34,35,36,37,],[-8,-10,-13,-14,27,-15,-21,-22,-24,-18,-20,-19,-23,]),'LPAREN':([18,],[21,]),'INTEGER':([28,],[37,]),'SHARP':([0,1,2,3,5,7,9,13,15,20,22,28,],[8,-6,-7,-8,-4,-5,8,-10,-9,-12,-11,8,]),'IDENTIFIER':([4,8,12,16,21,27,28,],[11,13,18,18,25,25,18,]),'$end':([0,1,2,3,5,6,7,9,10,13,14,15,20,22,],[-3,-6,-7,-8,-4,0,-5,-3,-2,-10,-1,-9,-12,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([12,16,28,],[17,19,31,]),'reference':([0,9,28,],[1,1,32,]),'evaluation':([0,9,],[2,2,]),'number':([28,],[35,]),'value':([28,],[34,]),'literal':([0,9,28,],[5,5,36,]),'kwarg':([21,27,],[24,24,]),'template':([0,9,],[6,14,]),'variable':([0,9,],[7,7,]),'expression':([0,9,],[9,9,]),'empty':([0,9,],[10,10,]),'arg_list':([21,27,],[26,30,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> template","S'",1,None,None,None),
  ('template -> expression template','template',2,'p_template','template.py',78),
  ('template -> empty','template',1,'p_template','template.py',79),
  ('empty -> <empty>','empty',0,'p_empty','template.py',86),
  ('expression -> literal','expression',1,'p_expression','template.py',90),
  ('expression -> variable','expression',1,'p_expression','template.py',91),
  ('expression -> reference','expression',1,'p_expression','template.py',92),
  ('expression -> evaluation','expression',1,'p_expression','template.py',93),
  ('literal -> LITERAL','literal',1,'p_literal','template.py',97),
  ('variable -> LVARBOUND IDENTIFIER RVARBOUND','variable',3,'p_variable','template.py',101),
  ('reference -> SHARP IDENTIFIER','reference',2,'p_reference','template.py',105),
  ('evaluation -> LVARBOUND IDENTIFIER EQUAL function RVARBOUND','evaluation',5,'p_evaluation','template.py',109),
  ('evaluation -> LVARBOUND EQUAL function RVARBOUND','evaluation',4,'p_evaluation','template.py',110),
  ('function -> IDENTIFIER','function',1,'p_function','template.py',117),
  ('function -> IDENTIFIER LPAREN RPAREN','function',3,'p_function','template.py',118),
  ('function -> IDENTIFIER LPAREN arg_list RPAREN','function',4,'p_function','template.py',119),
  ('arg_list -> kwarg','arg_list',1,'p_arg_list','template.py',128),
  ('arg_list -> kwarg COMMA arg_list','arg_list',3,'p_arg_list','template.py',129),
  ('kwarg -> IDENTIFIER EQUAL value','kwarg',3,'p_kwarg','template.py',136),
  ('value -> literal','value',1,'p_value','template.py',140),
  ('value -> number','value',1,'p_value','template.py',141),
  ('value -> function','value',1,'p_value','template.py',142),
  ('value -> reference','value',1,'p_value','template.py',143),
  ('number -> INTEGER','number',1,'p_number','template.py',147),
  ('number -> FLOAT','number',1,'p_number','template.py',148),
]
